{
    "PrintConsole": {
        "prefix": "dxlog",
        "body": [ "console.log('$1 => ', $1);" ],
        "description": "console log"
    },
   "ReactHookForms": {
        "prefix": "dxrhf",
        "body": [ 
            "\tconst [$1, set${1/(.*)/${1:/capitalize}/}] = React.useState<${1/(.*)/${1:/capitalize}/}Type>({} as ${1/(.*)/${1:/capitalize}/}Type);",
            "\tconst { handleSubmit, control, reset, formState: { errors } } = useForm<${1/(.*)/${1:/capitalize}/}Type>({});",
            "\tReact.useEffect(() => {",
            "\t\tonDefaul${1/(.*)/${1:/capitalize}/}();",
            "\t\tonReset${1/(.*)/${1:/capitalize}/}();",
            "\t\t",
            "\t// eslint-disable-next-line react-hooks/exhaustive-deps",
            "\t}, []);",
            "\tconst onDefault${1/(.*)/${1:/capitalize}/} = () => {",
            "\t\tset${1/(.*)/${1:/capitalize}/}({} as ${1/(.*)/${1:/capitalize}/}Type);",
            "\t};",
            "\tconst onReset${1/(.*)/${1:/capitalize}/} = () => {",
            "\t\treset({ ...$1 });",
            "\t};",
            "\tconst onSubmit${1/(.*)/${1:/capitalize}/} = async (data: ${1/(.*)/${1:/capitalize}/}Type) => {",
            "\t\tconsole.log('data $1 : ', data);",
            "\t\tRouterChange(AppRouter.INDEX);",
            "\t};",
            "\tconst onCancel= () => {",
            "\t\tRouterChange(AppRouter.INDEX);",
            "\t};",
            "\tconst ComponentSubmit = () => (",
            "\t\t<TypeButton name=\"SendHorizontal\" label=\"Submit\" onPress={handleSubmit(onSubmit${1/(.*)/${1:/capitalize}/})} />",
            "\t);",
            "\tconst ComponentCancel = () => (",
            "\t\t<TypeButton name=\"CircleX\" label=\"Cancel\" action=\"negative\" onPress={onCancel} />",
            "\t);",
        ],
        "description": "React hook forms"
    }
}